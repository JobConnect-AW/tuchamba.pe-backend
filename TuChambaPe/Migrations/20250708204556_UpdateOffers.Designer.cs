// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TuChambaPe.Shared.Infrastructure.Persistence.EFC.Configuration;

#nullable disable

namespace TuChambaPe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250708204556_UpdateOffers")]
    partial class UpdateOffers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TuChambaPe.IAM.Domain.Model.Aggregates.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password_hash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("role");

                    b.Property<Guid>("Uid")
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.HasKey("Id")
                        .HasName("p_k_accounts");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("i_x_accounts_uid");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("TuChambaPe.Offers.Domain.Model.Aggregates.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("duration");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payment_method");

                    b.Property<int>("ProposalsCount")
                        .HasColumnType("int")
                        .HasColumnName("proposals_count");

                    b.Property<Guid?>("SelectedProposalUid")
                        .HasColumnType("char(36)")
                        .HasColumnName("selected_proposal_uid");

                    b.Property<DateTimeOffset?>("StartAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<Guid>("Uid")
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.HasKey("Id")
                        .HasName("p_k_offers");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("i_x_offers_uid");

                    b.ToTable("offers");
                });

            modelBuilder.Entity("TuChambaPe.Payments.Domain.Model.Aggregates.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("currency");

                    b.Property<bool>("CustomerVerified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("customer_verified");

                    b.Property<Guid>("OfferUid")
                        .HasColumnType("char(36)")
                        .HasColumnName("offer_uid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<Guid>("Uid")
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<bool>("WorkerVerified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("worker_verified");

                    b.HasKey("Id")
                        .HasName("p_k_payments");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("ix_payments_created_at");

                    b.HasIndex("OfferUid")
                        .IsUnique()
                        .HasDatabaseName("ix_payments_offer_uid_unique");

                    b.HasIndex("Status")
                        .HasDatabaseName("ix_payments_status");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("ix_payments_uid");

                    b.ToTable("payments", (string)null);
                });

            modelBuilder.Entity("TuChambaPe.Proposals.Domain.Model.Aggregates.Proposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("created_by");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<Guid>("OfferUid")
                        .HasColumnType("char(36)")
                        .HasColumnName("offer_uid");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<Guid>("Uid")
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("updated_by");

                    b.Property<Guid>("WorkerUid")
                        .HasColumnType("char(36)")
                        .HasColumnName("worker_uid");

                    b.HasKey("Id")
                        .HasName("p_k_proposals");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("i_x_proposals_uid");

                    b.ToTable("proposals");
                });

            modelBuilder.Entity("TuChambaPe.Reviews.Domain.Model.Aggregates.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AuthorUserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("author_user_id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<Guid>("ReceiverUserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("receiver_user_id");

                    b.Property<Guid>("Uid")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_reviews");

                    b.HasIndex("AuthorUserId")
                        .HasDatabaseName("i_x_reviews_author_user_id");

                    b.HasIndex("Rating")
                        .HasDatabaseName("i_x_reviews_rating");

                    b.HasIndex("ReceiverUserId")
                        .HasDatabaseName("i_x_reviews_receiver_user_id");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("i_x_reviews_uid");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("TuChambaPe.Users.Domain.Model.Aggregates.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("bio");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_verified");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("ProfileType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("profile_type");

                    b.Property<Guid>("Uid")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_customers");

                    b.HasIndex("Location")
                        .HasDatabaseName("i_x_customers_location");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("i_x_customers_uid");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("TuChambaPe.Users.Domain.Model.Aggregates.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("customer_id");

                    b.Property<Guid>("Uid")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.Property<Guid?>("WorkerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("worker_id");

                    b.HasKey("Id")
                        .HasName("p_k_users");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasDatabaseName("i_x_users_account_id");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("i_x_users_uid");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("TuChambaPe.Users.Domain.Model.Aggregates.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("availability");

                    b.Property<string>("Avatar")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("avatar");

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("bank_account_number");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("bio");

                    b.Property<string>("Certifications")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("certifications");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("Experience")
                        .HasColumnType("int")
                        .HasColumnName("experience");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_verified");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("PlinNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("plin_number");

                    b.Property<string>("ProfileType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("profile_type");

                    b.Property<double>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3, 2)
                        .HasColumnType("double")
                        .HasDefaultValue(0.0)
                        .HasColumnName("rating");

                    b.Property<int>("ReviewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("review_count");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("skills");

                    b.Property<Guid>("Uid")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("YapeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("yape_number");

                    b.HasKey("Id")
                        .HasName("p_k_workers");

                    b.HasIndex("Location")
                        .HasDatabaseName("i_x_workers_location");

                    b.HasIndex("Rating")
                        .HasDatabaseName("i_x_workers_rating");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("i_x_workers_uid");

                    b.ToTable("workers", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
